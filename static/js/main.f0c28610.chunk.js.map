{"version":3,"sources":["actions/constants.js","components/Header/index.js","actions/auth.actions.js","components/Layout/index.js","containers/HomePage/index.js","actions/user.actions.js","components/UI/Card/index.js","containers/LoginPage/index.js","containers/RegisterPage/index.js","components/PrivateRoute.js","App.js","serviceWorker.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["authConstanst","userConstants","Header","props","auth","useSelector","state","dispatch","useDispatch","className","style","display","authenticated","to","margin","color","fontWeight","firstName","lastName","onClick","uid","a","type","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","console","log","payload","Layout","children","User","user","src","alt","flex","justifyContent","HomePage","unsubscribe","useState","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","useEffect","db","onSnapshot","querySnapshot","users","forEach","data","push","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","getRealtimeConversations","length","map","key","con","textAlign","value","onChange","e","target","placeholder","msgObj","add","isView","createdAt","Date","updateMessage","Card","LoginPage","email","setEmail","password","setPassword","onSubmit","preventDefault","signInWithEmailAndPassword","name","displayName","split","loggedInUser","setItem","JSON","stringify","alert","RegisterPage","setFirstName","setLastName","createUserWithEmailAndPassword","currentUser","updateProfile","set","signup","class","for","id","aria-describedby","PrivateRoute","Component","component","rest","getItem","parse","App","path","exact","Boolean","window","location","hostname","match","initState","authenticating","intiState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0c28610.chunk.js","sourcesContent":["export const authConstanst = {\r\n    USER_LOGIN: 'USER_LOGIN',\r\n    USER_LOGOUT: 'USER_LOGOUT'\r\n}\r\n\r\nexport const userConstants = {\r\n    GET_REALTIME_USERS: 'GET_REALTIME_USERS',\r\n    GET_REALTIME_MESSAGES: 'GET_REALTIME_MESSAGES'\r\n}","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../actions';\r\n\r\n/**\r\n* @author\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // const logout = () => {\r\n  //   dispatch(logout())\r\n  // }\r\n\r\n  return(\r\n    <header className=\"header\">\r\n        <div style={{display: 'flex'}}>\r\n          <div className=\"logo\">Web Chat</div>\r\n            \r\n            {\r\n              !auth.authenticated ? \r\n              <ul className=\"leftMenu\">\r\n                <li><NavLink to={'/login'}>Login</NavLink></li>\r\n                <li><NavLink to={'/signup'}>Sign up</NavLink></li>\r\n              </ul> : null\r\n            }\r\n              \r\n\r\n            \r\n        </div>\r\n          <div style={{margin: '20px 0', color: '#fff', fontWeight: 'bold'}}>\r\n            {auth.authenticated ? `Hi ${auth.firstName} ${auth.lastName}` : ''}\r\n          </div>\r\n        <ul className=\"menu\">\r\n\r\n            {\r\n              auth.authenticated ?\r\n              <li>\r\n                <Link to={'#'} onClick={() => {\r\n                  dispatch(logout(auth.uid))\r\n                }}>Logout</Link>\r\n            </li> : null\r\n            }\r\n          \r\n            \r\n             \r\n        </ul>\r\n    </header>\r\n   )\r\n\r\n }\r\n\r\nexport default Header","import { auth, firestore } from 'firebase';\r\nimport { authConstanst } from './constants';\r\nimport { getRealtimeUsers } from './user.actions';\r\n\r\nexport const signup = (user) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const db = firestore();\r\n\r\n        dispatch({type: `${authConstanst.USER_LOGIN}_REQUEST`});\r\n\r\n        auth()\r\n        .createUserWithEmailAndPassword(user.email, user.password)\r\n        .then(data => {\r\n            console.log(data);\r\n            const currentUser = auth().currentUser;\r\n            const name = `${user.firstName} ${user.lastName}`;\r\n            currentUser.updateProfile({\r\n                displayName: name\r\n            })\r\n            .then(() => {\r\n                //if you are here means it is updated successfully\r\n                db.collection('users')\r\n                .doc(data.user.uid)\r\n                .set({\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    uid: data.user.uid,\r\n                    createdAt: new Date(),\r\n                    isOnline: true\r\n                })\r\n                .then(() => {\r\n                    //succeful\r\n                    const loggedInUser = {\r\n                        firstName: user.firstName,\r\n                        lastName: user.lastName,\r\n                        uid: data.user.uid,\r\n                        email: user.email\r\n                    }\r\n                    localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n                    console.log('User logged in successfully...!');\r\n                    dispatch({\r\n                        type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                        payload: { user: loggedInUser }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    dispatch({ \r\n                        type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                        payload: { error }\r\n                      });\r\n                });\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const signin = (user) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: `${authConstanst.USER_LOGIN}_REQUEST` });\r\n        auth()\r\n        .signInWithEmailAndPassword(user.email, user.password)\r\n        .then((data) => {\r\n            console.log(data);\r\n\r\n\r\n            const db = firestore();\r\n            db.collection('users')\r\n            .doc(data.user.uid)\r\n            .update({\r\n                isOnline: true\r\n            })\r\n            .then(() => {\r\n                const name = data.user.displayName.split(\" \");\r\n                const firstName = name[0];\r\n                const lastName = name[1];\r\n\r\n                const loggedInUser = {\r\n                    firstName,\r\n                    lastName,\r\n                    uid: data.user.uid,\r\n                    email: data.user.email\r\n                }\r\n\r\n                localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n\r\n                dispatch({\r\n                    type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                    payload: { user: loggedInUser }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n            \r\n\r\n\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                payload: { error }\r\n            })\r\n        })\r\n        \r\n\r\n\r\n    }\r\n}\r\n\r\nexport const isLoggedInUser = () => {\r\n    return async dispatch => {\r\n\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\n        if(user){\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                payload: { user }\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                payload: { error: 'Login again please' }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const logout = (uid) => {\r\n    return async dispatch => {\r\n        dispatch({ type: `${authConstanst.USER_LOGOUT}_REQUEST` });\r\n        //Now lets logout user\r\n\r\n        const db = firestore();\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .update({\r\n            isOnline: false\r\n        })\r\n        .then(() => {\r\n\r\n            auth()\r\n            .signOut()\r\n            .then(() => {\r\n                //successfully\r\n                localStorage.clear();\r\n                dispatch({type: `${authConstanst.USER_LOGOUT}_SUCCESS`});\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                dispatch({ type: `${authConstanst.USER_LOGOUT}_FAILURE`, payload: { error } })\r\n            })\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n        \r\n\r\n\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Header from '../Header';\r\n\r\n/**\r\n* @author\r\n* @function Layout\r\n**/\r\n\r\nconst Layout = (props) => {\r\n  return(\r\n    <div>\r\n        <Header />\r\n        {props.children}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Layout","import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport Layout from '../../components/Layout';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRealtimeUsers, updateMessage, getRealtimeConversations } from '../../actions';\r\n\r\n\r\nconst User = (props) => {\r\n\r\n\r\n  const {user, onClick} = props;\r\n\r\n  return (\r\n    <div onClick={() => onClick(user)} className=\"displayName\">\r\n                  <div className=\"displayPic\">\r\n                      <img src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\" alt=\"\" />\r\n                  </div>\r\n                  <div style={{ display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px'}}>\r\n                      <span style={{fontWeight: 500}}>{user.firstName} {user.lastName}</span>\r\n                      <span className={user.isOnline ? `onlineStatus` : `onlineStatus off`}></span>\r\n                  </div>\r\n              </div>\r\n  );\r\n}\r\n\r\nconst HomePage = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const user = useSelector(state => state.user);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [chatUser, setChatUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [userUid, setUserUid] = useState(null);\r\n  let unsubscribe;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    unsubscribe = dispatch(getRealtimeUsers(auth.uid))\r\n    .then(unsubscribe => {\r\n      return unsubscribe;\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n\r\n    \r\n\r\n\r\n  }, []);\r\n\r\n  //console.log(user);\r\n\r\n  //componentWillUnmount\r\n  useEffect(() => {\r\n    return () => {\r\n      //cleanup\r\n      unsubscribe.then(f => f()).catch(error => console.log(error));\r\n\r\n    }\r\n  }, []);\r\n\r\n\r\n  const initChat = (user) => {\r\n\r\n    setChatStarted(true)\r\n    setChatUser(`${user.firstName} ${user.lastName}`)\r\n    setUserUid(user.uid);\r\n\r\n    console.log(user);\r\n\r\n    dispatch(getRealtimeConversations({ uid_1: auth.uid, uid_2: user.uid }));\r\n\r\n  }\r\n\r\n  const submitMessage = (e) => {\r\n\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message\r\n    }\r\n\r\n\r\n    if(message !== \"\"){\r\n      dispatch(updateMessage(msgObj))\r\n      .then(() => {\r\n        setMessage('')\r\n      });\r\n    }\r\n\r\n    //console.log(msgObj);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <section className=\"container\">\r\n\r\n        <div className=\"listOfUsers\">\r\n\r\n\r\n          {\r\n            user.users.length > 0 ?\r\n            user.users.map(user => {\r\n              return (\r\n                <User \r\n                  onClick={initChat}\r\n                  key={user.uid} \r\n                  user={user} \r\n                  />\r\n              );\r\n            }) : null\r\n          }\r\n\r\n            \r\n                    \r\n        </div>\r\n\r\n        <div className=\"chatArea\">\r\n            \r\n            <div className=\"chatHeader\"> \r\n            {\r\n              chatStarted ? chatUser : ''\r\n            }\r\n            </div>\r\n            <div className=\"messageSections\">\r\n                {\r\n                  chatStarted ? \r\n                  user.conversations.map(con =>\r\n                    <div style={{ textAlign: con.user_uid_1 == auth.uid ? 'right' : 'left' }}>\r\n                    <p className=\"messageStyle\" >{con.message}</p>\r\n                  </div> )\r\n                  : null\r\n                }\r\n                \r\n\r\n            </div>\r\n            {\r\n              chatStarted ? \r\n              <div className=\"chatControls\">\r\n                <textarea \r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  placeholder=\"Write Message\"\r\n                />\r\n                <button onClick={submitMessage}>Send</button>\r\n            </div> : null\r\n            }\r\n            \r\n        </div>\r\n    </section>\r\n  </Layout>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import { userConstants } from \"./constants\";\r\nimport { firestore } from 'firebase';\r\n\r\nexport const getRealtimeUsers = (uid) => {\r\n\r\n    //console.log('uid', uid)\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n\r\n        const db = firestore();\r\n        const unsubscribe = db.collection(\"users\")\r\n        //.where(\"uid\", \"!=\", uid)\r\n        .onSnapshot((querySnapshot) => {\r\n            const users = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid != uid){\r\n                    users.push(doc.data());\r\n                }\r\n            });\r\n            //console.log(users);\r\n\r\n            dispatch({ \r\n                type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n                payload: { users }\r\n            });\r\n\r\n        });\r\n\r\n        return unsubscribe;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const updateMessage = (msgObj) => {\r\n    return async dispatch => {\r\n\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n        .add({\r\n            ...msgObj,\r\n            isView: false,\r\n            createdAt: new Date()\r\n        })\r\n        .then((data) => {\r\n            console.log(data)\r\n            //success\r\n            // dispatch({\r\n            //     type: userConstants.GET_REALTIME_MESSAGES,\r\n            // })\r\n\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const getRealtimeConversations = (user) => {\r\n    return async dispatch => {\r\n\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n        .where('user_uid_1', 'in', [user.uid_1, user.uid_2])\r\n        .orderBy('createdAt', 'asc')\r\n        .onSnapshot((querySnapshot) => {\r\n\r\n            const conversations = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n\r\n                if(\r\n                    (doc.data().user_uid_1 == user.uid_1 && doc.data().user_uid_2 == user.uid_2)\r\n                    || \r\n                    (doc.data().user_uid_1 == user.uid_2 && doc.data().user_uid_2 == user.uid_1)\r\n                ){\r\n                    conversations.push(doc.data())\r\n                }\r\n\r\n                \r\n\r\n                // if(conversations.length > 0){\r\n                    \r\n                // }else{\r\n                //     dispatch({\r\n                //         type: `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`,\r\n                //         payload: { conversations }\r\n                //     })\r\n                // }\r\n\r\n\r\n\r\n                \r\n            });\r\n\r\n            dispatch({\r\n                type: userConstants.GET_REALTIME_MESSAGES,\r\n                payload: { conversations }\r\n            })\r\n\r\n            console.log(conversations);\r\n        })\r\n        //user_uid_1 == 'myid' and user_uid_2 = 'yourId' OR user_uid_1 = 'yourId' and user_uid_2 = 'myId'\r\n\r\n\r\n    }\r\n}","import React from 'react';\r\nimport './style.css';\r\n\r\n/**\r\n* @author\r\n* @function Card\r\n**/\r\n\r\nconst Card = (props) => {\r\n  return(\r\n    <div className=\"card\">\r\n        {props.children}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Card","import React, { useState, useEffect } from 'react'\r\nimport Layout from '../../components/Layout';\r\nimport Card from '../../components/UI/Card';\r\nimport { signin, isLoggedInUser } from '../../actions';\r\nimport './style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function LoginPage\r\n**/\r\n\r\nconst LoginPage = (props) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  // useEffect(() => {\r\n  //   if(!auth.authenticated){\r\n  //     dispatch(isLoggedInUser())\r\n  //   }\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(email == \"\"){\r\n      alert(\"Email is required\");\r\n      return;\r\n    }\r\n    if(password == \"\"){\r\n      alert(\"Password is required\");\r\n      return;\r\n    }\r\n\r\n    dispatch(signin({ email, password }));\r\n    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  if(auth.authenticated){\r\n    return <Redirect to={`/`} />\r\n  }\r\n\r\n\r\n\r\n  return(\r\n    <Layout>\r\n      <div className=\"loginContainer\">\r\n        <Card>\r\n          <form onSubmit={userLogin}>\r\n            \r\n            <input \r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n\r\n            <input \r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n\r\n\r\n            <div>\r\n              <button>Login</button>\r\n            </div>\r\n\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default LoginPage","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport { signup } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function RegisterPage\r\n **/\r\n\r\nconst RegisterPage = (props) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const registerUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password\r\n    };\r\n\r\n    dispatch(signup(user));\r\n  };\r\n\r\n  if (auth.authenticated) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"registerContainer\">\r\n        <Card>\r\n          <form onSubmit={registerUser}>\r\n            <h3>Sign up</h3>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email address</label>\r\n            <input\r\n             id=\"exampleInputEmail1\" \r\n             aria-describedby=\"emailHelp\"\r\n             //type=\"email\" \r\n             class=\"form-control\" \r\n             //class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"              \r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n              placeholder=\"First Name\"\r\n            />\r\n            </div>\r\n            <br />\r\n\r\n            <input\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              placeholder=\"Last Name\"\r\n            />\r\n            <br />\r\n\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n            <br />\r\n\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n\r\n            <div>\r\n              <button>Sign up</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function PrivateRoute\r\n**/\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n  return(\r\n    <Route {...rest} component={(props) => {\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\n        if(user){\r\n            return <Component {...props} />\r\n        }else{\r\n            return <Redirect to={`/login`} />\r\n        }\r\n\r\n    }} />\r\n   )\r\n\r\n }\r\n\r\nexport default PrivateRoute","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport HomePage from './containers/HomePage';\r\nimport LoginPage from './containers/LoginPage';\r\nimport RegisterPage from './containers/RegisterPage';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isLoggedInUser } from './actions';\r\n\r\nfunction App() {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  useEffect(() => {\r\n    if(!auth.authenticated){\r\n      dispatch(isLoggedInUser())\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {/* only logged in user can access this home route */}\r\n        <PrivateRoute path=\"/\" exact component={HomePage} />\r\n\r\n\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/signup\" component={RegisterPage} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { authConstanst } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    authenticating: false,\r\n    authenticated: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch(action.type){\r\n\r\n        case `${authConstanst.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated: false,\r\n                authenticating: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_REQUEST`:\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_SUCCESS`:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n\r\n    return state;\r\n}","import { userConstants } from \"../actions/constants\"\r\n\r\nconst intiState = {\r\n    users: [],\r\n    conversations: []\r\n}\r\n\r\nexport default (state = intiState, action) => {\r\n\r\n    switch(action.type){\r\n        case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n            break;\r\n        case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n            break;\r\n        case userConstants.GET_REALTIME_MESSAGES:\r\n            state = {\r\n                ...state,\r\n                conversations: action.payload.conversations\r\n            }\r\n            break;\r\n        case `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                conversations: []\r\n            }\r\n            break;\r\n        \r\n    }\r\n\r\n\r\n    return state;\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from './auth.reducer';\r\nimport userReducer from './user.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport firebase from \"firebase\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n// Your web app's Firebase configuration\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBXn5-SA-r3H0zMzww_wNI6zWtuOBI6b4A\",\r\n  authDomain: \"web-messenger-b8fbc.firebaseapp.com\",\r\n  databaseURL: \"https://web-messenger-b8fbc.firebaseio.com\",\r\n  projectId: \"web-messenger-b8fbc\",\r\n  storageBucket: \"web-messenger-b8fbc.appspot.com\",\r\n  messagingSenderId: \"248689344783\",\r\n  appId: \"1:248689344783:web:c09fc11cbdac917a8cfe7a\",\r\n  measurementId: \"G-VBNYH0BZ98\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}